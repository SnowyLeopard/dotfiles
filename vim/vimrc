"turn off vi compatibility
set nocompatible

let &runtimepath = &runtimepath . ',' . finddir('bundle/pathogen', &runtimepath)
call pathogen#infect()

"syntax highlighting on
syntax on

"Background color/style
set background=dark

"Setting the default colorscheme
colorscheme solarized

"buffers can now exist in background
set hidden

"turn on plugins and stuff
filetype on
filetype plugin on
filetype indent on 

set backspace=indent,eol,start

" Buffer switching.
call unite#filters#matcher_default#use(['matcher_fuzzy'])

nnoremap <silent> <leader><leader>ur :Unite file_rec -start-insert<cr>
nnoremap <silent> <leader><leader>uf :Unite file -start-insert<cr>
nnoremap <silent> <leader><leader>uh :Unite file_mru -start-insert<cr>
nnoremap ` :Unite buffer -start-insert<cr>

" Map jj to esc in insert mode. Esc is too far away.
inoremap jj <Esc>

"Some command remaps to not have to pay attention
cnoreabbrev W w
cnoreabbrev Wa wa
cnoreabbrev WA wa
cnoreabbrev Q q
cnoreabbrev Qa qa
cnoreabbrev QA qa

"binds to make HL behave like a stronger h and l
nnoremap <silent> H ^
nnoremap <silent> L $
vnoremap <silent> H ^
vnoremap <silent> L $

set pastetoggle=<leader>k

"Obviousmode
set laststatus=2

"turn on line numbers
set number

"turn on line and column markers
set cursorline
set cursorcolumn

"automatic and smart indent
set autoindent
set copyindent
set smartindent
set tabstop=4
set shiftwidth=4
set expandtab

"search related settings
set showcmd
set showmatch
set ignorecase
set smartcase
set incsearch
set hlsearch
set scrolloff=8

"turn off useless clutter files
set noswapfile
set nobackup
set nowb

"Fast scrolling
set ttyfast
set lazyredraw

"Persistent undo
set undodir=~/.vim/undodir
set undofile
set undolevels=1000 "maximum number of changes that can be undone
set undoreload=10000 "maximum number lines to save for undo on a buffer reload

"Code folding
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=1         "this is just what i use

"Syntastic settings
let g:syntastic_check_on_wq = 0
let g:syntastic_aggregate_errors = 1
let g:syntastic_auto_jump = 1
let g:syntastic_mode_map = { 'mode': 'passive' }
let g:syntastic_cpp_compiler_options = ' -std=gnu++0x'
let g:syntastic_php_checkers=['php', 'phpmd']

map <Leader>s :SyntasticToggleMode<CR>

"Powerline settings
let g:Powerline_symbols = "fancy"

"Neocomplete
let g:neocomplete#enable_at_startup = 1

autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags

" <TAB>: completion.
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"

" Use smartcase.
let g:neocomplete#enable_smart_case = 1
" Set minimum syntax keyword length.
let g:neocomplete#sources#syntax#min_keyword_length = 3

autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
autocmd InsertLeave * if pumvisible() == 0|pclose|endif

set rtp+=$HOME/dotfiles/powerline/powerline/bindings/vim/

" Always show statusline
set laststatus=2

" " Use 256 colours (Use this setting only if your terminal supports 256
" colours)
set t_Co=256

" Set binding for sudo save
cmap w!! w !sudo tee > /dev/null %
set list lcs=tab:>-,trail:>
